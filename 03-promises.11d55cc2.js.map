{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAElCC,EAAkB,EA+BtB,SAASC,EAAcC,EAAUC,GAW/B,OAVe,IAAIC,SAAQ,SAACC,EAASC,GACnC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQV,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,QAEnEG,EAAKX,EAAAgB,OAAOG,QAAQ,sBAAqCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAElEA,E,IAtCPN,EAAOkB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBACFjB,EAAkB,EAElB,IAAMkB,EAAW,IAAIC,SAASH,EAAEI,QACAC,EAAAC,OAAOC,YAAYL,GAA3Cf,EAAwBkB,EAAxBlB,MAAOqB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEjBC,GAAiBvB,EACjBwB,EAAkB,EAEdC,EAAaC,aAAY,WAK7B,OAJA7B,GAAmB,MACMyB,GACvBK,cAAcF,GAEQ,IAApB5B,OAEFC,EADA0B,GAAmB,EACYD,GAAeK,MAAK,SAAAC,G,OAAUA,C,IAAQC,OAAM,SAAAD,G,OAAUA,C,IAK9E/B,EAFP0B,GAAmB,EACnBD,IAAkBF,GACmCO,MAAK,SAAAC,G,OAAUA,C,IAAQC,OAAM,SAAAD,G,OAAUA,C,MAE7F,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nlet intervalCounter = 0;\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  intervalCounter = 0;\n\n  const formData = new FormData(e.target);\n  const { delay, step, amount } = Object.fromEntries(formData);\n\n  let countertDeley = +delay;\n  let counterPosition = 0;\n\n    const intervalId = setInterval(() => {\n      intervalCounter += 1;\n      if (intervalCounter === +amount) {\n        clearInterval(intervalId);\n      };\n      if (intervalCounter === 1) {\n        counterPosition += 1;\n        createPromise(counterPosition, countertDeley).then(result => result).catch(result => result);\n        return\n      } else {\n        counterPosition += 1;\n        countertDeley += +step;\n        return createPromise(counterPosition, countertDeley).then(result => result).catch(result => result);\n      }\n    }, 0);\n}\n\nfunction createPromise(position, delay) {\n  const promis = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay)\n  })\n  return promis;\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$intervalCounter","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","success","concat","failure","addEventListener","e","preventDefault","formData","FormData","target","ref","Object","fromEntries","step","amount","countertDeley","counterPosition","intervalId","setInterval","clearInterval","then","result","catch"],"version":3,"file":"03-promises.11d55cc2.js.map"}